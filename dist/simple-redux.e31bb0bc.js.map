{"version":3,"sources":["reducer.js","createStore.js","index.js"],"names":["reducer","state","action","type","payload","createStore","fn","initialState","currentReducer","currentState","listener","getState","dispatch","subscribe","cb","count","document","querySelector","incButton","decButton","rndButton","store","addEventListener","Math","floor","random","textContent"],"mappings":";;AEAA;;AACA;;AAEA,IAAMe,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAd;ADHO,ACIP,AFJO,ICAMZ,ACIPa,AFJOlB,OAAO,EEIL,CFJQ,CCAC,CCINgB,EDJS,KDAdhB,CEIa,CAACiB,EDJdZ,GDAU,CAACJ,KAAD,ECAI,ACIT,AFJaC,CCAHI,ACIa,EDJd,EAAKC,CDAT,CEIL,CAAlB,AFJ0C,SCAf,EAAsB;AAC/C,ACIF,AFJE,IEIIY,EDJAX,IDAIN,GEIK,GAAGc,AFJF,CAACb,GCAG,CDAlB,ECAqBG,CCIG,CDJxB,ACIyBW,aAAT,CAAuB,MAAvB,CAAlB;ADHE,ACIF,AFJI,IEIEG,EDJAX,GDAG,IEIM,CFJX,EEIcO,EDJA,GAAGT,GCIK,CAACU,QDJzB,KCIgB,CAAuB,MAAvB,CAAlB;AAEA,AFLM,IEKAV,SFLON,GEKK,EFLA,CEKG,CAArB,CFLqB,CAAf;ACCJ,ACMF,IAAMoB,EDNAX,GCMK,GAAG,EDNA,GAAG,oBAAM,CAAE,CAAvB,GCMwBV,gBAAZ,EAAqBO,YAArB,CAAd;AFNI,IEQIK,KFRC,KAAL,CEQsCS,MAAlCT;ADNN,ADDI,IEOYC,KDNT,IDDIZ,GEO6BoB,EFPxB,GAAG,CEOHR,AFPZ;ACEFF,IAAAA,ACKyBA,QDNpB,GCMiCU,MAAbV,aDLd;AACT,ACMNO,AFRI,SEQK,AFRA,CEQCI,GDNGb,CDFT,WCEE,CCMN,CAA2B,OAA3B,EAAoC,YAAY;ADL3C,ACMHG,AFRI,EEQJA,GDTO,KCSC,CAAC,EFREX,KAAK,GAAGC,MAAM,CAACE,OAAtB;ACGFQ,ACKST,IDLTS,ACKST,IAAI,EAAE,EDTV,oBAIID,MAJJ,EAIY;AACfO,ACIK,AFPP,GEOM,CAAR,EDJIA,YAAY,GAAGD,cAAc,CAACC,YAAD,EAAeP,MAAf,CAA7B;AACAQ,ACIL,AFPK,CEKN,KDFMA,ODHOT,CCGC,IDHR;ACIA,ACKNkB,AFjBE,SEiBO,CAACG,GDLGpB,MAAP,OCKN,CAA2B,OAA3B,EAAoC,YAAY;ADJ3C,ACKHU,AFRD,CAXM,CEmBLA,GDbO,KCaC,CAAC;ADJPC,ACISV,IDJTU,ACISV,IAAI,EAAE,GDbV,qBASKW,EATL,EASS;AACZJ,ACGK,GAAD,CAAR,EDHIA,QAAQ,GAAGI,EAAX;AACD,ACGJ,CAFD;ADZS,ACgBTM,GDhBE,MCgBO,CAACE,gBAAV,CAA2B,OAA3B,EAAoC,YAAY;ADH/C,ACICV,CDvBK,CCuBLA,QAAQ,CAAC;AAAET,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAEmB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B;AAAxB,GAAD,CAAR;AACD,CAFD;AAIAZ,SAAS,CAAC;AAAA,SAAOE,KAAK,CAACW,WAAN,GAAoBf,QAAQ,EAAnC;AAAA,CAAD,CAAT","file":"simple-redux.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INC':\r\n      return state + 1;\r\n    case 'DEC':\r\n      return state - 1;\r\n    case 'RND':\r\n      return state + action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const createStore = (fn, initialState) => {\r\n  let currentReducer = fn;\r\n  let currentState = initialState;\r\n\r\n  let listener = () => {};\r\n\r\n  return {\r\n    getState() {\r\n      return currentState;\r\n    },\r\n    dispatch(action) {\r\n      currentState = currentReducer(currentState, action);\r\n      listener();\r\n      return action;\r\n    },\r\n    subscribe(cb) {\r\n      listener = cb;\r\n    },\r\n  };\r\n};\r\n","import { reducer } from './reducer';\r\nimport { createStore } from './createStore';\r\n\r\nconst count = document.querySelector('p');\r\nconst incButton = document.querySelector('.inc');\r\nconst decButton = document.querySelector('.dec');\r\nconst rndButton = document.querySelector('.rnd');\r\n\r\nconst initialState = 0;\r\n\r\nconst store = createStore(reducer, initialState);\r\n\r\nconst { dispatch, subscribe, getState } = store;\r\n\r\nincButton.addEventListener('click', function () {\r\n  dispatch({ type: 'INC' });\r\n});\r\n\r\ndecButton.addEventListener('click', function () {\r\n  dispatch({ type: 'DEC' });\r\n});\r\n\r\nrndButton.addEventListener('click', function () {\r\n  dispatch({ type: 'RND', payload: Math.floor(Math.random() * 10) });\r\n});\r\n\r\nsubscribe(() => (count.textContent = getState()));\r\n"]}